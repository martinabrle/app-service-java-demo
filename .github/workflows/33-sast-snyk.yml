name: 33-SAST-Snyk
on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'
  pull_request:
    # These types are all required for CRDA to scan pull requests correctly and securely.
    types: [ opened, synchronize, reopened, labeled, edited ]
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'
  schedule:
    - cron: '45 13 * * 1'
  workflow_call:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  snyk:
    name: ci/snyk
    permissions:
        contents: read # for actions/checkout to fetch code
        security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
        actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: "11"
      - name: Cache build
        id: cache-build
        uses: actions/cache@v3
        with:
            path: todo/target
            key: ${{ runner.os }}-target
      - name: Cache m2
        id: cache-deps
        uses: actions/cache@v3
        with:
            path: ~/.m2/**/*.jar
            key: ${{ runner.os }}-m2
      - name: Install dependencies
        run: cd todo && ./mvnw clean package -DskipTests
      - uses: snyk/actions/setup@master
        env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}    #   - name: Run OWASP Dependency Check
    #     uses: dependency-check/action@v2
    #     with:
    #       format: "ALL"
    #       failOnCVSS: "9"
    #       outputFile: "dependency-check-report.html"
    #   - name: Upload OWASP Dependency Check report
    #     uses: actions/upload-artifact@v2
    #     with:
    #       name: Dependency Check Report
    #       path: dependency-check-report.html
      - name: Snyk Code test
        run: snyk code test --sarif > snyk-code.sarif || true
        env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true
        # Runs Snyk Open Source (SCA) analysis and uploads result to Snyk.
      - name: Snyk Open Source monitor
        run: snyk monitor --all-projects
        env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true
      - name: Upload Snyk report
        uses: actions/upload-artifact@v3.1.3
        with:
          name: snyk-code.sarif
          path: ${{github.workspace}}/snyk-code.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
            sarif_file: snyk-code.sarif
